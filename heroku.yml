# ! Docker-Compose Specification
version: '3.3'

# ! Define Project Network
networks:
  app-network:

# ! Define Project Volume
volumes:
  pgdata:

# ? App Stack
services:
  # ? Bring up Nginx After Backend and Link Volumes
  webserver:
    image: nginx:1.21-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "${HTTP_PORT}"
    volumes: 
      - ./:/var/www
      - .docker/nginx:/etc/nginx/conf.d
    networks:
      - app-network

  # ? Bring up Postgres and configure the Database
  database:
    image: postgres:14-alpine
    container_name: database
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  # ? Build, Bring up Backend Container
  backend: 
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: backend
    volumes:
      - .:/var/www
      - .docker/php-fpm/php.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - database
    networks:
      - app-network

  # ? Bring Up Client UI
  client:
    build:
      context: .
      dockerfile: npm.dockerfile
    container_name: client
    tty: true
    volumes:
      - ./:/app
    depends_on:
      - backend
    networks:
      - app-network
